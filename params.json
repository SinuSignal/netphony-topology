{
  "name": "Netphony-topology",
  "tagline": "BGP-LS Speaker and Traffic Engineering Database",
  "body": "netphony-topology v1.2.1\r\n=======\r\n\r\nNetphony-topology is a BGP-LS Speaker and a Java based Traffic Engineering Database. \r\n\r\nBGP-LS is used for distributing Network Topologies to external elments, for example, a Path Computation Element. \r\n\r\nThe BGP-LS speaker can be run as a standalone application, or as a module attached to other software.\r\n\r\n## Traffic Engineering Database\r\n\r\nThe traffic Engineering Database (TED) is a collection of nodes and links, each of them with Traffic Engineering Attributes. The TED has as an attribute a domain identifier and a network layer.\r\n\r\n\r\n## Compilation and use\r\n\r\nThe library can be built using the maven tool. Thus, all the dependencies are included in the pom.xml file. There is a Junit test included that performs the following tests:\r\n* Buils two BGP-LS Speakers, one acting as sender of topology, and the other as consumer. A small topology is loaded from an xml file in BGP-LS Speaker #1. This topology is sent to BGP-LS Speaker #2.   \r\n* Contributions on expanding the test suite are welcomed!!\r\n\r\nTo build the .jar file and run the tests, first you need to install the netphony-network-protocols (the upload process to maven central is in progress)\r\n ```bash\r\n    git clone https://github.com/telefonicaid/netphony-network-protocols.git\r\n    cd netphony-network-protocols\r\n    git checkout tags/v1.2.1\r\n    mvn package\r\n    mvn install\r\n ```\r\n Then, once the netphony-network-protocols is installed, you can proceed with the netphony-topology.\r\n  ```bash\r\n    cd ..\r\n    git clone https://github.com/telefonicaid/netphony-topology.git\r\n    cd netphony-topology\r\n    mvn package\r\n    mvn install\r\n ```\r\n# BGP-LS Speaker\r\n\r\nThe BGPPeer is the principal class to run a BGP Speaker. It represents a BGP4 peer. It launches the BGP connections with its peers and waits for incoming connections. \r\n\r\nTo run the BGP Peer as a standalone application use the class BGPPeerMain. You can use maven to create an autoexecutable jar that includes all dependencies in a single file. Plase be aware that if you use the real BGP port (179) you need to start as root.\r\n  ```bash\r\n    git clone https://github.com/telefonicaid/netphony-topology.git\r\n    cd netphony-topology\r\n    mvn clean compile assembly:single\r\n    cd target\r\n    sudo java -jar topology-1.2-jar-with-dependencies.jar \r\n ```\r\n \r\n Before running, you should configure the parameteres. The parameters are configured in an xml file. By default, if used with BGPPeerMain, or it is not specified a file name, BGP4Parameters.xml should be used. An example of the file is located in examples/BGP4Parameters.xml (and with the maven assembly build, it is copied in the target directory).\r\n\r\n## Configuration parameters\r\nThe parameters to be configured are:\r\n\r\n* **BGP4Port:** TCP port where the BGP is listening for incoming bgp4 connections. Optional Parameter. Default value: 179 (BGP Port)\r\n* **localBGPAddress:** IP where the BGP is listening for incoming bgp4 connections. Default value: localhost\r\n* **BGPIdentifier:** 32 Bit ID. Write it like an IP address (e.g. 10.0.0.1) See section 3.2.1.4 of https://datatracker.ietf.org/doc/draft-ietf-idr-ls-distribution/?include_text=1\r\n* **BGP4ManagementPort:** TCP port to connect to manage the BGP connection. Default value: 1112 \r\n* **configPeer:** Peers to which this Peer is going to establish connection. One entry per peer.\r\n  *  **peer:** IP Address of the peer\r\n  *  **export:** If we need to export the topology to this peer. False by default\r\n  *  **import:** If we are going to import topology from this peer. True by default\r\n* **setTraces:** true/false if the traces (detailed logs) are active or inactive. \r\n* **BGP4LogFile:** File where the logs are dumped\r\n* **delay:** Waiting Time to re-connect to clients. Default value: 6000 ms.\r\n* **myAutonomousSystem:** RFC 4271.  This 2-octet unsigned integer indicates the Autonomous System number of the sender\r\n\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}